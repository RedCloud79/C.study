0 1 2 3 4 ... 9 A B C D E F
F <=> 1111 0 <=> 0000 0xEF <=> 11101111
E <=> 1110 1 <=> 0001
D <=> 1101 2 <=> 0010
C <=> 1100 3 <=> 0011
B <=> 1011 4 <=> 0100
A <=> 1010 5 <=> 0101
9 <=> 1001 6 <=> 0110
8 <=> 1000 7 <=> 0111
4비트 표현 숫자 가지수 : 16가지 : 0~15(2^4-1)
16/2=8 -8~8-1(-2^3~2^3-1)
8비트(1B) : 16*16 = 256 = 2^8 : 0~2^8-1(unsigned char)
2^8/2=2^7 : -2^7~2^7-1(char)
16비트(2B) : 2^16 : 0~2^16-1(unsigned short)
2^16/2=2^15 : -2^15~2^15-1(short)
32비트(4B) : 2^32 : 0~2^32-1(unsigned int)
2^32/2=2^31 : -2^31~2^31-1(int)
8비트 : 2^8/2=2^7

*음수를 만드는 방법
char : 3 => 00000011 => 0*2^7 1*2^1 1*2^0
-3 => 11111100(1의 보수 => +1 => 11111101 => -2^7
-128+64+32+16+8+4+0+1 = -3

-------------------------------------------------------------------
#if 0
#include <stdio.h>

int main(void) {
	short sh = 32767;
	int in = 2147483647;
	long ln = 2147483647;
	long long lln = 123451234512345;

	printf("short형 변수 출력 : %d\n", sh);
	printf("int형 변수 출력 : %d\n", in);
	printf("long형 변수 출력 : %d\n", ln);
	printf("long long형 변수 출력 : %d\n", lln);

	return 0;

}
#endif
------------------------------------------------------------
#if 1
#include <stdio.h>

int main(void) {
	unsigned int uin = 0xFFFFFFFF;
	printf("%u\n", uin); // 표현할 수 있는 최대 양수값
	uin++;
	printf("%u\n", uin);
	uin--;
	printf("%u\n", uin);

	int in = 0x80000000; // 제일 작은 값 (최솟값)
	printf("%d %d\n", in, in-1);
	in = 0x7FFFFFFF; //최댓값
	printf("%d %d\n", in, in+1);

	return 0;
}
#endif
-------------------------------------------------------------
#if 1
#include <stdio.h>

int main(void) {
	float ft = 1.2345678901234567890;
	double db = 1.12345678901234567890;

	printf("float형 변수 출력 : %.20f\n", ft);
	printf("double형 변수 출력 : %.20f\n", db);
	return 0;
}
#endif
-------------------------------------------------------------
#if 1
#include <stdio.h>

int main(void) {
	char fruit[20] = "strawberry"; //char 배열 선언과 문자열 초기화
								   //char 배열명[문자길이+1] = 문자열;의 형태

	printf("딸기 : %s\n", fruit);
	printf("딸기쨈 : %s %s\n", fruit, "jam");
  strcpy(fruit, "banana"); // strawberry를 banana로 교체
	printf("%s\n", fruit);
  fruit[0] = 'b'; // 이와같은 형태로 교체 가능
	fruit[1] = 'a';
	fruit[2] = 'n';
	fruit[3] = 'a';
	fruit[4] = 'n';
	fruit[5] = 'a';
  fruit[6] = '\0';
  printf("%s\n", fruit);
	fruit[0] = "mango"[0];
	fruit[1] = "mango"[1];
	fruit[2] = "mango"[2];
	fruit[3] = "mango"[3];
	fruit[4] = "mango"[4];
	fruit[5] = "mango"[5];
	printf("%s\n", fruit);
	for (int i = 0; i < 10; i++) {
		fruit[i] = "mandarine"[i];

	}
	printf("%s\n", fruit);
  int i;
	for (i = 0; "coconut"[i] != '\0'; i++) {
		fruit[i] = "coconut"[i];
	}
	fruit[i] = '\0';
	printf("%s\n", fruit);
	for (int i = 0; i < 20; i++) {
		if(i<11) printf("%c ", fruit[i]);
		else printf("%d ", fruit[i]);
	}
	return 0;
}
#endif
@ 컴파일 오류시 #define _CRT_SECURE_NO_WARNINGS추가
--------------------------------------------------------------

































##5_chpter 간단정리

#1차 배열
1. 배열 선언과 초기화
- int ia[5] = {1,2,3,4,5};
2. 배열을 함수로 넘겨주고 *받는다.
- f(ia); => void f(int ia[5]);
3. 배열접근(읽거나 쓴다)
- for(int i = 0; i <5; i++) printf("%d", ia[i]);
4. 배열은 너무커 -> 0번 항목 주소값(&)으로 주자
-> 그러면 주소변수(*)가 필요하겠네
- f(ia);//&ia[0](정수 변수 주소값) =>
void f(int ia[5]);//int *ia(정수변수 주소변수)
5. 포인터 변환과정
(int ia[5]) => (int ia[]) => (int ([]ia)) => (int *ia;)


#2차 배열
1. 2차배열 선언과 초기화
- int iaa[3][5] = {{1,2},{3,4},{5}};
2. 배열을 함수로 넘겨주고 *받는다.
- f(iaa); => void f(int ia[3][5]);
3. 배열접근(읽거나 쓴다)
- for(int i = 0; i <3; i++)
    for(int j = 0; j <5; j++)printf("%d", iaa[i][j]);
4. 배열은 너무커 -> 0번 항목 주소값(&)으로 주자
-> 그러면 주소변수(*)가 필요하겠네
- f(iaa);//&iaa[0](정수 변수[5] 주소값) =>
void f(int iaa[3][5]);//int (*iaa)[5](정수변수 주소변수)
5. 포인터 변환과정
(int iaa[3][5]) => (int (iaa[])[5]) => (int ([]iaa)[5]) => (int (*iaa)[5];)
cf. (int (*iaa)[5];) vs (int *iaa[5];) = *보다 []를 우선처리

----------------------------------------------------------------------------------
#if 1
#include <stdio.h>

int main(void) {
	printf("%zd\n", sizeof(char[4]));
	printf("%zd\n", sizeof(int[4]));
	printf("%zd\n", sizeof(double[4]));
	printf("%zd\n", sizeof(char*[4]));
	printf("%zd\n", sizeof(int*[4]));
	printf("%zd\n", sizeof(double*[4]));
  printf("%zd\n", sizeof(int(* )[5])); //배열 주소변수
	printf("%zd\n", sizeof(int(*[4])[5])); //배열 주소변수배열

	return 0;

}
#endif
---------------------------------------------------------------------------------
#if 1
#include <stdio.h>

int main(void) {

	char *pary[5];// 문자변수의 주소변수 5개 pary
	int i;

	pary[0] = "dog";
	pary[1] = "elephant";
	pary[2] = "horse";
	pary[3] = "tiger";
	pary[4] = "lion";

	for (i = 0; i < 5; i++) {
		printf("%s\n", pary[i]);
	}

	return 0;

}
#endif
@visual studio의 경우 프로젝트 - 속성 - c/c++ - 모든옵션 - 준수모드(아니요) 로변경시 오류안뜸
설정을 안해줄경우 pary[i] = "@@" 줄에서 오류 출력 (const char *pary[5])의 형태로 변형시 올바른표기.
--------------------------------------------------------------------------------
#if 1
#include <stdio.h>
//void prt(char* pary[5]) {
void prt(char* pary[]) {
void prt(char **pary) { // (const char *)*
	for (int i = 0; i < 5; i++) {
		printf("%s\n", pary[i]);
	}
}

int main(void) {

	char* pary[5];// 문자변수의 주소변수 5개 pary
	
	pary[0] = "dog";
	pary[1] = "elephant";
	pary[2] = "horse";
	pary[3] = "tiger";
	pary[4] = "lion";

	prt(pary);//=>&pary[0] => &(const char *)

	return 0;

}
#endif
-------------------------------------------------------------------------------
#if 1
#include <stdio.h>

int main(void) {

	int ary1[4] = { 1,2,3,4 };
	int ary2[4] = { 11,12,13,14 };
	int ary3[4] = { 21,22,23,24 };
	int *pary[4] = { ary1, ary2, ary3 };
	int i, j;

	for (i = 0; i < 3; i++) {
		for (j = 0; j < 4; j++) {
			printf("%5d", pary[i][j]);
		}
		printf("\n");
	}
	return 0;

}
#endif
-------------------------------------------------------------------------------
#if 1
#include <stdio.h>

//void prt(int* pary[4]) {
//void prt(int* pary[]) {
void prt(int **pary) {
	for (int i = 0; i < 3; i++) {
		for (int j = 0; j < 4; j++) {
			printf("%5d", pary[i][j]);
		}
		printf("\n");
	}
}

int main(void) {

	int ary1[4] = { 1,2,3,4 };
	int ary2[4] = { 11,12,13,14 };
	int ary3[4] = { 21,22,23,24 };
	int* pary[4] = { ary1, ary2, ary3 }; // &ayr1[0], &ayr2[0], &ayr3[0]
	
	prt(pary);
	return 0;

}
#endif
---------------------------------------------------------------------------
1차 배열과 함수 : 281~288
2차 배역과 함수 : 382~396, 431
*배열과 함수 : 403~410, 425

#if 1
#include <stdio.h>

void print_str(char ** pss, int cnt) {
	for (int i = 0; i < cnt; i++) {
		printf("%s\n", pss[i]);
		
	}
}

int main(void) {

	char* ptr_ary[] = { "eagle", "tiger", "lion", "squirrel" };
	int count;

	count = sizeof(ptr_ary) / sizeof(ptr_ary[0]);
	print_str(ptr_ary, count);
	return 0;

}
#endif
------------------------------------------------------------------------------
프로그램(함수+변수) 실행 -> 프로세스(함수+변수+스택)
-> 스택(고드름형태를 가짐)에 인자를 복사해 넣는다. 

#if 1
#include <stdio.h>

//int main(int argc, char* argv[] {
int main(int argc, char **argv) {
	printf("argc=%d\n", argc);
	printf("argv[0]->\"%s\"\n", argv[0]);
	printf("argv[1]->\"%s\"\n", argv[1]);
	printf("argv[2]->\"%s\"\n", argv[2]);
	printf("argv[3]->\"%s\"\n", argv[3]);
	printf("argv[4]->\"%s\"\n", argv[4]);
	printf("argv[5]->\"%s\"\n", argv[5]);
	printf("argv[6]->\"%s\"\n", argv[6]);

	
	return 0;

}
#endif
-----------------------------------------------------------------------------
#if 1
#include <stdio.h>

//int main(int argc, char* argv[] {
int main(int argc, char** argv) {
	int i;

	for (i = 0; i < argc; i++) {
		printf("%s\n", argv[i]);
	}


	return 0;

}
#endif
------------------------------------------------------------------------------
#if 1
#include <stdio.h>

//int main(int argc, char* argv[] {
int main(int argc, char** argv) {
	int i = 0;
	printf("%p\n", &i); // p의 값은 pointer의 위치를 알려준다.


	return 0;

}
#endif
------------------------------------------------------------------------------
#if 1
#include <stdio.h>

//int main(int argc, char* argv[] {
int main(int argc, char** argv) {
	int i = 0;
	printf("%p(%zd[%d])\n", &i, sizeof(i), i); // i의 보유값
	printf("%p(%zd[%d])\n", &argc, sizeof(argc), argc); // argc의 보유값
	printf("%p(%zd[%d])\n", &argv, sizeof(argv), argv); // argv의 보유값
	printf("%p\n", main); // main의 주소값
	return 0;
}
#endif
------------------------------------------------------------------------------
#if 1
#include <stdio.h>

//int main(int argc, char* argv[] {
int main(int argc, char** argv) {
	int a;
	double b;
	char c;

	printf("int형 변수의 주소 : %u %u\n", &a, &a+1); 
	//unsigned = 10진수, '%p'의 16진수형태를 기본형태로 받는다.(4증가)
	printf("double형 변수의 주소 : %u %u\n", &b, &b+1); // (8증가)
	printf("char형 변수의 주소 : %u %u\n", &c, &c + 1); // (1증가)
	return 0;
}
#endif
--------------------------------------------------------------------------------
#if 1
#include <stdio.h>

int main(int argc, char** argv) {
	int a = 3;
	int* pa = NULL; //8바이트 0

	pa = &a; // pa라는 주소값에 a라는 주소변수를 대입
	*pa = 10; // pa주소변수를 가르키는 주소에 10을 대입 *pa<=>*(pa+0)<=>pa[0]
	*(pa + 0) = 11; //포인터 표현의 접근방식
	pa[0] = 12;
	
	printf("포인터로 a값 출력 : %d\n", *pa);
	printf("변수명으로 a값 출력 : %d\n", a);
	return 0;

}
#endif
---------------------------------------------------------------------------------
#if 1
#include <stdio.h>

int main(int argc, char** argv) {
	int a[1] = { 3 }; // 배열로 생성
	int* pa = NULL; //8바이트 0

	pa = a; // 배열로 값을받으면 &가빠진다. 주소변수 = 주소상수, a = pa;// 주소값=주소변수(x)실행안됨.
	*pa = 10; // pa주소변수를 가르키는 주소에 10을 대입
	*(pa + 0) = 11; //포인터 표현의 접근방식
	pa[0] = 12;

	printf("포인터로 a값 출력 : %d\n", *pa);
	printf("변수명으로 a값 출력 : %d\n", a);
	return 0;

}
#endif
-----------------------------------------------------------------------------------
@ 주소값은 상수, 포인터는 주소변수
#if 1
#include <stdio.h>
void swap(int* pa, int* pb);
int main(int argc, char** argv) {
	int a = 10, b = 20;

	swap(&a, &b);
	printf("a:%d, b:%d\n", a, b);
	return 0;
}
void swap(int* pa, int* pb) {
	int temp;

	temp = *pa;
	*pa = *pb;
	*pb = temp;
}
#endif
-----------------------------------------------------------------------------------
#if 1
#include <stdio.h>

int main(int argc, char** argv) {
	int ary[3];
	int i;

	*(ary + 0) = 10; // ary[0] 항목 (포인터 방식의 표현)
	*(ary + 1) = *(ary + 0) + 10; // ary[0]에 + 10하여 ayr[1]항목에 추가

	printf("세번째 배열 요소에 키보드 입력 : ");
	scanf("%d", ary + 2);
	//&ary[2], ary<=>ary+0<=>&ary[0]
	
	for (i = 0; i < 3; i++) {
		printf("%5d", *(ary + i)); //<=>ary[i]
	}
	return 0;
}

#endif
------------------------------------------------------------------------------------
#if 1
#include <stdio.h>

int main(int argc, char** argv) {
	int ary[3]; // int ary[3] = {0};
	int* pa = ary;
	int i;

	*pa = 10; // pa[0] = 10;
	*(pa + 1) = 20; // pa[1] = 20;
	pa[2] = pa[1] + pa[0];
	//*(pa+2) = *(pa+1) + *(pa+0), *(ary+2) = *(ary+1) + *(ary+0)과 동일한 형태

	for (i = 0; i < 3; i++) {
		printf("%5d", pa[i]);
	}
	return 0;
}

#endif
------------------------------------------------------------------------------------
#if 1
#include <stdio.h>

int main(int argc, char** argv) {
	int ary[3] = { 10,20,30 };
	int* pa = ary;
	int i;

	printf("배열의 값: ");
	for (i = 0; i < 3; i++) {
		printf("%5d", *pa);
		pa++; // pa[i]와 (*pa + i) 같이 동작을 한다.
	}
	return 0;
}

#endif
---------------------------------------------------------------------------------



